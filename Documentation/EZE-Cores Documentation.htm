<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta http-equiv="Content-Language" content="en-us">
  <meta http-equiv="Content-Type"
 content="text/html; charset=windows-1252">
  <title>EZI-Skripting Structure Referenc</title>
	<style type="text/css">
.style1 {
	text-align: left;
}
</style>
</head>
<body alink="#0000ff" link="#0000ff" vlink="#0000ff">
<p align="center"><font size="4"><b>EZE-Cores 1.50<br>
</b></font><b>Script Management System</b><font size="4"><b><br>
</b></font>Dynamic Object Oriented Pre-Hypertext Processing Cores<font size="4"><b><br>
</b></font>© 2002-2007 <br>
Biznatch Enterprises INC.<br>
<a href="http://www.Biznaturally.org">www.Biznaturally.org</a></p>
<hr>
<p align="center"><b>PHP Scripting language is the ideal solution for
all web based dynamic content applications and pages</b>.</p>
<p align="center">It's superior flexibility allows programmers to
maximize their productivity while minimizing the workload involved.</p>
<p align="left">&nbsp;&nbsp;&nbsp; EZE-Cores was designed
and implemented by Biznatch Enterprises in a variety of web-based
applications and is continually evolving and pushing boundaries,
limitations and obstacles never thought possible
with PHP Scripting. We have been vigorously&nbsp; testing various
standardized methods of Dynamic Scripting for quite some time and now
have finally created a refined, and publicly used core that can be
integrated by beginners or intermediate developers to any project as
desired. Its popular usage being; an ideal solution for a compact
organizational backbone for any website, web-based scripting
application or project. This allows for quick and seamless dynamic
HTML, CSS, JAVASCRIPT and Web Scripting to be uniquely structured and
organized... leaving one concentrating on the task at hand... not how
to bring it all together.</p>
<p align="center"><b>It is time one harnesses the true power of
Pre-Hypertext Processing, without all the fuss and grumble.</b></p>
<p align="justify"><b><a name="tableofcontents"></a>Table Of Contents<br>
</b>-<a href="#core">About EZE-Cores</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -<a href="#howworks">How
EZE-Cores Work</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -<a href="#coreprocess">EZE-Cores
Process</a><br>
<br>
-<a href="#usingcore">Using EZE-Cores</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -<u><a
 href="#internalsectors">EZE-Cores Internal Sectors:</a></u><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -<u><a href="#coresettings">EZE-Cores
Settings</a><b><font size="4"><br>
</font></b>
</u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -<a
 href="#coreexternalsectors">EZE-Cores External (Plug-ins) Sectors:</a><u><font
 size="4"><b><br>
</b></font>
</u><font size="2"><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </b></font>&nbsp;&nbsp;
-<a href="#coresactionsectors">EZE-Cores Action Sectors:</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -<a href="#makingitwork">Making
it Work</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -<u><a href="#coreerrors">EZE-Cores
Errors</a></u><font size="4"><br>
<br>
&nbsp;</font></p>
<p align="justify"><a name="core"></a><b><u><font size="4">About
EZE-Cores:</font><br>
</u>&nbsp;&nbsp;&nbsp; </b>EZE-Skripting Cores are revolutionary
Dynamic Object Oriented Pre-Hypertext Processing Cores that can be
utilized in web-based development in a variety of applications. Dynamic
Cores are organized and loaded by the all-in-one solution for truly
dynamic web scripting comprising of a single PHP script called
"EZE-cores.php". The Core Settings File called "EZE-Cores-Settings.php"
controls almost every aspect of operation of all the EZE-Cores. This
efficient configuration allows for robust module management without the
frustration and scripting involved in creating one for each web-based
application you require, or attempting to modify past attempts.</p>
<p align="center"><b>Finally the dynamic solution that can be used over
and over again with speed and ease!<br>
<br>
</b><font size="1">(<a href="#tableofcontents">Back To Table Of Contents</a>)</font></p>
<p align="justify"><b><u>
<font size="4"><a name="howworks"></a>How EZE-Cores Work:</font><br>
</u>&nbsp;&nbsp;&nbsp; </b>Pre-Hypertext processing is not something
new, however the cumbersome aspect of mixing content with scripting
usually leaves one overwhelmed with module management. </p>
<p align="center"><b>EZE-Cores breaks applications up into individual
Sectors of classes, and dynamically calls and processes them on demand.<br>
<br>
</b>"Sectors: Computer Science. A portion of a magnetic storage device
making up the smallest addressable unit of information." -
Dictionary.com<br>
"Core: A set of subjects or courses that make up a required portion of
a curriculum." - Dictionary.com<br>
<br>
<font size="1">(<a href="#tableofcontents">Back To Table Of Contents</a>)</font></p>
<p align="left"><b><u>
<font size="4"><a name="coreprocess"></a>EZE-Cores Process:<br>
</font></u>
</b>&nbsp;&nbsp;&nbsp; EZE-Cores fully unite all your class script
files in a Object Oriented fashion. Applications are separated into easy<br>
to use Classes that can be referenced back to each core dynamically and
easily.</p>
<p align="left"><b><font size="4">&nbsp;&nbsp;&nbsp; <u>EZE-Cores
Process Timeline<br>
</u>&nbsp;&nbsp;&nbsp; </font><u><a href="#internalsectors">1-
Internal Sectors Are Processed</a><br>
</u>&nbsp;&nbsp;&nbsp;&nbsp; <u><a href="#coresettings">2- EZE-Cores
Settings File Is Loaded</a><br>
</u>&nbsp;&nbsp;&nbsp; &nbsp;<u><a href="#coreexternalsectors">3-
External Sectors Are Processed</a><br>
</u>&nbsp;&nbsp;&nbsp; &nbsp;<u><a href="#coresactionsectors">4- Action
Sectors Are Processed</a><br>
</u>&nbsp;&nbsp;&nbsp; &nbsp;<u><a href="#coresectors">5- Core Sectors
Are Processed</a></u></b></p>
<p align="left"><b><font size="4">&nbsp;&nbsp;&nbsp; <u>Sector Process
Timeline</u></font><br>
&nbsp;&nbsp;&nbsp;
</b>1- Sector Pre-script Classes are executed and output can be
directly passed to the Layout Engine with ease.<b><br>
&nbsp;&nbsp;&nbsp;
</b>2- Integrated and External Layout Engine Classes Dynamically
generate the application output for each individual<br>
&nbsp;&nbsp;&nbsp; Sector by dynamically replacing Pre-Script Variables
directly into HTML layout files.<br>
&nbsp;&nbsp;&nbsp; 3- Processed Classes Output for every Sector is then
easily use html objects in other Sectors and Classes via:<br>
&nbsp;&nbsp;&nbsp; <font face="Arial Narrow">##EZECORES_SECTOR_ENGINE_OUTPUT[PARENT_A][CHILD_1]##</font></p>
<p align="center"><font size="1">(<a href="#tableofcontents">Back To
Table Of Contents</a>)</font></p>
<p align="justify"><br>
<b><a name="usingcore"></a><u><font size="4">Using EZE-Cores:<br>
</font>
</u></b>Most of the development time on projects is wasted trying to
organize and unite all the elements in a efficient and easy to use way.<font
 size="4"><b><u><br>
<br>
</u></b></font><i>Consider this:<br>
<br>
1- <b>Running Internal Classes</b> - Functions that are built directly
into EZE-Cores.php<br>
2- <b>Importing Global Settings </b></i><b>- </b><i>Dynamically
controls most aspects of your projects from one place.<br>
3- <b>Running Plug-in Classes </b>- Allows you to load external
Scripts and Layouts to quickly re-use anywhere.</i><font size="4"><b><u><br>
</u></b></font><i>4- <b>Running Your Action Classes </b>- Actions are
specific sections of dynamically controlled Scripts and Layouts.<br>
5- <b>Running all the above in a dynamic Core Class </b>- Quickly
customize the "environment" that runs your Dynamic Sectors and Classes</i><b><i>.</i><font
 size="4"><br>
&nbsp;</font></b></p>
<p align="center"><font size="1">(<a href="#tableofcontents">Back To
Table Of Contents</a>)</font></p>
<p align="left"><b><u><a name="internalsectors"></a><font size="4">EZE-Cores
Internal Sectors:<br>
<br>
</font>
</u></b>These are Functions that are Built into EZE-Cores Itself.<br>
<br>
<u><font size="4">General Usages:</font></u><br>
<b>$temp = NumberToLetter($Number);<br>
</b>Input: 1-26&nbsp;&nbsp; Outputs: A-Z<br>
<b>$temp = NumberToLetter($Letter);<br>
</b>Input: A-Z&nbsp;&nbsp; Outputs: 1-26<br>
<br>
<b>$temp = encrypt($text,$CRYPT_KEY);<br>
</b>Input: Raw Strings&nbsp;&nbsp; Outputs: Encrypted Strings&nbsp; <br>
<b>$temp = decrypt($text,$CRYPT_KEY);<br>
</b>Input: Encrypted Strings&nbsp;&nbsp; Outputs: Raw Strings</p>
<p align="center"><font size="1">(<a href="#tableofcontents">Back To
Table Of Contents</a>)</font></p>
<p align="left"><b><a name="coresettings"></a><u><font size="4">EZE-Cores
Settings:<br>
<br>
</font>
</u></b>1- GENERAL CORES SETTINGS<br>
2- CORES VARIABLE SETTINGS<br>
3- THE CORES<br>
4- EXTERNAL SECTORS (Plug-ins)<br>
5- ACTION SECTORS MAX CHILDREN<br>
6- ACTION SECTORS<br>
7- EXTRA SETTINGS</p>
<p align="center"><font size="1">(<a href="#tableofcontents">Back To
Table Of Contents</a>)</font></p>
<p align="left"><u><b><a name="coreexternalsectors"></a><font size="4">EZE-Cores
External (Plug-ins) Sectors:<br>
</font></b></u>undocumented at this time</p>
<p align="center"><font size="1">(<a href="#tableofcontents">Back To
Table Of Contents</a>)</font></p>
<p align="left"><b><u><a name="coresactionsectors"></a><font size="4">EZE-Cores
Action Sectors:<br>
</font></u></b>undocumented at this time</p>
<p align="center"><font size="1">(<a href="#tableofcontents">Back To
Table Of Contents</a>)</font></p>
<p align="left"><b><u><a name="coresectors"></a><font size="4">EZE-Cores
Core Sectors:<br>
</font></u></b>undocumented at this time</p>
<p align="center"><font size="1">(<a href="#tableofcontents">Back To
Table Of Contents</a>)</font></p>
<p align="left"><b><a name="makingitwork"></a><font size="4"><u>Making
it Work:<br>
<br>
</u></font></b>1- Put all your HTML content files into ESL files and
define them as Layout Classes in the settings file for each Sector.<br>
2- Write all the scripting that is used with the Layout Classes and
make them Pre-Scripts in the Sectors that require their processing or
variables output.<br>
3- Customize the Sector Engine Classes to replace HTML objects in the
Layout Classes for each Sector with variables in the Pre-Scripts.<br>
<br>
<b>Remember:</b> Most Class Settings can be customized in
"EZE-Cores-Settings.php" or in the Class Files themselves, there should
never really be any need to modify EZE-Cores Itself...</p>
<p align="center"><font size="1">(<a href="#tableofcontents">Back To
Table Of Contents</a>)</font></p>
<p align="left"><u><b><font size="4"><a name="coreerrors"></a>EZE-Cores
Errors</font></b></u><br>
-Currently we are only relying on built in PHP debugger technology. <br>
-In The future the core will have a customizable full PHP re-debugger
integrated for ease of scripting. <br>
-To Help with debugging errors a built in <b>EZECORES_Run_Debug_Mode</b>
setting "In EZE-Cores Settings File" that when set to <b>TRUE,</b>
displays "<b>Loaded:</b> Filename" for each Class in every Sector as
they are Processed. This allows for developers to quickly trap the
error in small sections of code, without painlessly searching through
thousands or millions of lines of code.</p>
<p align="center"><i><font size="4">Errors you will encounter
frequently while using the most Current Version of EZE-Cores:</font></i></p>
<p align="center"><b><font size="2"><br>
</font></b>UN-CLEANED OPEN-SOURCE VERSION<font size="2">: EZE-Cores Build: 
August 11 2006<br>
<b><br>
Parse error</b></font><font size="2">:
parse error in <b>EZEcore.php(815) : eval()'d code</b> on line #</font><b><br>
</b>This means there is an Error on the specified line in the<b>
EZE-Cores Settings File</b><u><br>
<br>
</u><b><font size="2">Parse error</font></b><font size="2">: parse
error in <b>
EZE-cores.php(771) : eval()'d code</b> on line #</font><br>
This means there is an Error on the specified line in one of your <b>EZE-Database 
Helper Classes</b><u><br>
<br>
</u><b><font size="2">Parse error</font></b><font size="2">: parse
error in <b>
EZE-cores.php(431) : eval()'d code</b> on line #</font><br>
This means there is an Error on the specified line in one of your <b>External
Classes</b><u><br>
<br>
</u><b><font size="2">Parse error</font></b><font size="2">: parse
error in&nbsp;<b>index.php(1199) : eval()'d code</b> on line #</font><b><br>
</b>This means there is an Error on the specified line in one of the
loaded <b>
Action Pre-script Classes</b><u><br>
<br>
</u><b><font size="2">Parse error</font></b><font size="2">: parse
error in <b>
EZE-cores.php(677) : eval()'d code</b> on line #</font><b><br>
</b>This means there is an Error on the specified line in the<b> </b>one
of the loaded<b> Action Layout Engine Classes<br>
<br>
<font size="2">Parse error</font></b><font size="2">: parse error in </font><b>
<font size="2">EZE-cores.php(791) : eval()'d code</font></b><font
 size="2"> on line #</font><u><br>
</u>This means there is an Error on the specified line in the loaded<b>
Core Pre-script Class<br>
<br>
<font size="2">Parse error</font></b><font size="2">: parse error in </font><b>
<font size="2">EZE-cores.php(843) : eval()'d code</font></b><font
 size="2"> on line #</font><b><br>
</b>This means there is an Error on the specified line in the loaded<b>
Core Engine Class<br>
</b><u>
<br>
</u><font size="1">(<a href="#tableofcontents">Back To Table Of Contents</a>)</font></p>
<p align="center">&nbsp;</p>
<p align="left">//############ EZE-DATABASE-HELPER SETTINGS START ##############<br>
//Database Data Can be Accessable Globally BUT Limited Locally<br>
//Database Data Can be Accessable by any sector but not every sector<br>
//define global dbs data array for use Globally<br>
//Below are EXAMPLES---<br>
//$EZE_DBS_USABLE_AS = ' PARENT-CHILD';<br>
//$EZE_DBS_USABLE_AS = ' A-HOME, B-HOME, A-ABOUT';<br>
//---------------------<br>
<br>
//-------------------read + parse paidtestersnewsalerts.php-----------------<br>
$EZEDBS_USABLE_AS = ' ' . 'A-HOME, A-ABOUT';<br>
<br>
$CM = strpos($EZEDBS_USABLE_AS, $CHILD_TITLE);<br>
if ($CM &gt; 0){ //if current parent and child is contained within $EZEDBS_USABLE_AS 
call to dynamic helper function and return array of parsed dbs<br>
EZE_DBS_HELPER('ReadDBPS', 'ExternalSectors/EZE-DATABASE-HELPER-BETA.php', 
'Databases/paidtestersnewsalerts.php', '', '', '', '', '');<br>
<br>
if ($EZE_DBS_OUTPUT[0][0] == 'Parse Database Completed'){<br>
global $PAIDTESTERSNEWSALTERS; //define the global dbs variable here for your 
database<br>
$PAIDTESTERSNEWSALTERS = $EZE_DBS_OUTPUT;<br>
//echo $PAIDTESTERSNEWSALTERS[1][5];<br>
//echo $EZE_DBS_OUTPUT[0][0];<br>
}<br>
}<br>
//-------------------read + parse paidtestersnewsalerts.php-----------------<br>
<br>
//-------------------read + parse privatenewsletterpayments.php-----------------<br>
$EZEDBS_USABLE_AS = ' ' . 'A-HOME,';<br>
<br>
$CM = strpos($EZEDBS_USABLE_AS, $CHILD_TITLE);<br>
if ($CM &gt; 0){<br>
EZE_DBS_HELPER('ReadDBPS', 'LASTHELPER', 'Databases/privatenewsletterpayments.php', 
'', '', '', '', '');<br>
<br>
if ($EZE_DBS_OUTPUT[0][0] == 'Parse Database Completed'){<br>
global $PRIVATENEWSPAYMENTS;<br>
$PRIVATENEWSPAYMENTS = $EZE_DBS_OUTPUT;<br>
//echo $PRIVATENEWSPAYMENTS[1][1];<br>
}<br>
}<br>
//-------------------read + parse privatenewsletterpayments.php-----------------<br>
<br>
//-------------------add new partition + sectors to 
privatenewsletterpayments.php-----------------<br>
$NEWSECTORS[1] = 'title1';<br>
if (EZE_DBS_HELPER('AddDBP', 'LASTHELPER', 'Databases/privatenewsletterpayments.php', 
$NEWSECTORS, '', '', '', '') == &quot;EZE-DATABASE OK&quot;){<br>
$title = $EZE_DBS_OUTPUT[0][0];<br>
//make custom confirmation here<br>
}<br>
else<br>
{<br>
$title = $EZE_DBS_OUTPUT[0][0];<br>
//make custom error here<br>
}<br>
echo $title;<br>
//-------------------add new partition + sectors to 
privatenewsletterpayments.php-----------------<br>
<br>
<br>
//-------------------update partition sectors to 
privatenewsletterpayments.php-----------------<br>
$FIRSTSECTOR = 'title3';<br>
$FINDSECTORS[1] = 'md5';<br>
$REPLACESECTORS[1] = 'md6';<br>
<br>
EZE_DBS_HELPER('UpdateDBPS', 'LASTHELPER', 
'Databases/privatenewsletterpayments.php', $FIRSTSECTOR, $FINDSECTORS, 
$REPLACESECTORS, '', '') == &quot;EZE-DATABASE OK&quot;)<br>
//-------------------update partition to 
privatenewsletterpayments.php-----------------<br>
<br>
<br>
<br>
<br>
//############ EZE-DATABASE SETTINGS HELPER END ##############</p>
<p align="left">&nbsp;</p>
<p align="left">&nbsp;</p>
<p align="left">&nbsp;</p>
<p align="left">&nbsp;</p>
<p class="style1">-----------------------DEFINE 
PLUGINS--(layout.htm)-(EZE-Cores-Settings.php)-------<br>
//$^^^^^ PLUGIN #1 START ^^^^^ = ;<br>
$EZECORES_SECTOR_TITLE['EXTERNAL']['CHILD_1'] = 'Layout';<br>
$EZECORES_SECTOR_ENABLED['EXTERNAL']['CHILD_1'] = 'TRUE';<br>
$EZECORES_SECTOR_LAYOUT_FILENAME['EXTERNAL']['CHILD_1'] = 'ExternalSectors/layout.htm';<br>
$EZECORES_SECTOR_ENGINE_OUTPUT['EXTERNAL']['CHILD_1'] = '';<br>
//$^^^^^ PLUGIN #1 END ^^^^^ = ;<br>
---------------------------------------------------------------------------------</p>
<p class="style1">------------------DEFINE 
ACTION SECTORS-----(Sector_A_0_PRS.php) in (EZE-Cores-Settings.php)-----------<br>
//------------------------------------------------------------------------------------------------------------<br>
//$^^^^^ PARENT_A CHILD_0 START ^^^^^ = ;<br>
$EZECORES_SECTOR_TITLE['PARENT_A']['CHILD_0'] = 't';<br>
$EZECORES_SECTOR_ENABLED['PARENT_A']['CHILD_0'] = 'TRUE';<br>
$EZECORES_SECTOR_SHOWINCORESECTOR['PARENT_A']['CHILD_0'] = 'TRUE';<br>
$EZECORES_SECTOR_PRESCRIPT_FILENAME['PARENT_A']['CHILD_0'] = 'ActionSectors/Prescripts/Sector_A_0_PRS.php';<br>
$EZECORES_SECTOR_PRESCRIPT_ENCRYPTED['PARENT_A']['CHILD_0'] = 'FALSE';<br>
$EZECORES_SECTOR_PRESCRIPT_CRYPTKEY['PARENT_A']['CHILD_0'] = '';<br>
$EZECORES_SECTOR_LAYOUT_FILENAME['PARENT_A']['CHILD_0'] = 'ActionSectors/Layouts/Sector_A_0_ESL.php';<br>
$EZECORES_SECTOR_LAYOUT_ENCRYPTED['PARENT_A']['CHILD_0'] = 'FALSE';<br>
$EZECORES_SECTOR_LAYOUT_CRYPTKEY['PARENT_A']['CHILD_0'] = '';<br>
$EZECORES_SECTOR_ENGINE_FILENAME['PARENT_A']['CHILD_0'] = 'ActionSectors/Engines/Sector_A_0_ENG.php';<br>
$EZECORES_SECTOR_ENGINE_ENCRYPTED['PARENT_A']['CHILD_0'] = 'FALSE';<br>
$EZECORES_SECTOR_ENGINE_CRYPTKEY['PARENT_A']['CHILD_0'] = '';<br>
$EZECORES_SECTOR_ENGINE_OUTPUT['PARENT_A']['CHILD_0'] = '';<br>
//$^^^^^ PARENT_A CHILD_0 END ^^^^^ = ;<br>
//------------------------------------------------------------------------------------------------------------<br>
-----------------------------------------------------------</p>
<p class="style1">&nbsp;</p>
<p class="style1">-----------USING PLUGINS------INSIDE ACTION SECTORS-----------(Sector_A_1_PRS.php)---------<br>
DIV_MAINCONTENT1 = &amp;New EZE_MODULE;<br>
$DIV_MAINCONTENT1-&gt;DBG = $EZECORES_Run_Debug_Mode;<br>
$DIV_MAINCONTENT1-&gt;CLONE('MAINCONTENT1', 
$EZECORES_SECTOR_TITLE['EXTERNAL']['CHILD_1'], 
$EZECORES_SECTOR_ENGINE_OUTPUT['EXTERNAL']['CHILD_1']);<br>
$DIV_MAIN1 = &amp;New EZE_MODULE;<br>
$DIV_MAIN1-&gt;ESL_OBJ[1] = '##MAINCONTENT##';<br>
$DIV_MAIN1-&gt;NESL_OBJ[1] = $DIV_MAINCONTENT1-&gt;DATA;<br>
$DIV_MAIN1-&gt;ESL_OBJ[2] = '##SID##';<br>
$DIV_MAIN1-&gt;NESL_OBJ[2] = $SID;<br>
$DIV_MAIN1-&gt;DBG = $EZECORES_Run_Debug_Mode;<br>
$DIV_MAIN1-&gt;CLONE('MAIN1', $EZECORES_SECTOR_TITLE['EXTERNAL']['CHILD_1'], 
$EZECORES_SECTOR_ENGINE_OUTPUT['EXTERNAL']['CHILD_1']);<br>
$ACTION_CONTENT = $DIV_MAIN1-&gt;DATA; //MAIN<br>
---------------------------------------------------</p>
<p class="style1">&nbsp;</p>
<p align="center">&nbsp;</p>
<p align="center">&nbsp;</p>
<p align="center">&nbsp;</p>
<hr>
</body>
</html>
